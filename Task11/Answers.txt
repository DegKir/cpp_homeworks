1.Какая ссылка ссылка называется пробрасывающей (универсальной)?
	Оказывается, что && - это не всегда rvalue ссылка.
	Иногда это выражение означает (либо rvalue, либо lvalue)
	Если переменная или параметр объявлены с типом T&& для некоторого выводимого типа T, такая переменная или паметр является универсальной ссылкой. Здесь работает правило свёртски ссылок
//  T == &  => & && => & T-lvalue ссылка, в итоге получаем её же
//  T == && =>&& && => && T-rvalue ссылка, в итоге получаем её же
Таким образом вместо перегрузки для rvalue и lvalue ссылки можно использовать универсальную ссылку и сократить объём кода. Например это используется в идеальной передаче.
	

2.Что обеспечивает идеальная передача и как она реализуется?
	Идеальная передача обеспечивает минимализацию затрат ресурсов в случаях использования высших функций(функций, которые вызывают другие функции). Использование идеальной передачи предполагает сокращение логически лишних созданий и уничтожений объектов.
	Пример-функция, которая вызывает другую функцию и необходимо передавать аргумент сначала в внешнюю, а потом из внешней во внутренюю.Идеальная передача позволит не создавать лишний раз объект во внешней функции а передавать его сразу во внутренюю.
	Идеальная передача реализуется при помощи шаблона с использованием универсальной ссылки. Общий случай идеальной передачи выглядит:
	template<typename T>
	void f(T&& arg){g(forward<T>(arg));
Универсальная ссылка позволяет не писать отдельные реализации для rvalue и lvalue ссылок. forward можно рассматривать как обертку static_cast() в случае, когда T использован с универсальной ссылкой.


3.Что такое метафункция?
	Метафункция это как обычная функция, но она осуществляет операции не над обычными переменными, а над типами. Метафункция реализуется при помощи шаблона класса. Результат функции это вложенный тип данных. Пример - сравнение типов, является ли тип таким-то и т.д.


4.Что такое вложенный тип данных? Для чего он используется ?
	Вложенный тип данных - тип данных, объявленный внутри шаблона класса. С его помощью можно получать, например, результаты работы метафункций.


5.Для чего нужен оператор decltype?
	при помощи decltype(штука) можно объявить перменную с таким же типом данных как и у штуки. Например 
	int a = 5;
	decltype(a) b;
	b после данных строчек будет int
