1.Как можно использовать вычисления на этапе компиляции ?
    Вычисления различных математических констант(приближенное вычисление числа e из задания) 
        в особенности, когда нужная константа иррациональна и её можно только приближать.
    Вычисления в программах, подразумевающий частый рефакторинг кода. Тогда вместо каких-либо
        констант программы, написанных при помощи хардкодинга, можно предоставлять их вычисление. 
        Тогда при рефакторинге вместо долгого и муторного переписывания изначальных констант,
        можно просто поменять некоторые входные значения.

2.Какие языковые механики работают на этапе компиляции ?
    шаблоны, ключевое слово constexpr, простые вычисления(int a=2+3;), подстановка хедеров,макросы,

3.Какие ограничения имеет метапрограммирование шаблонов ?
    метапрограммирование шаблонов ограничивается компиляцией. отсюда следует
    метапрограммирование шаблонов не может напрямую взаимодействовать с пользователем
    метапрограммирование шаблонов имеет сложновоспринимаемый синтаксис, что осложняет работу с ним.
    метапрограммирование шаблонов не очень хорошо воспринимает числа с плавающей точкой

4.В чём заключается идиома SFINAE применительно к шаблонам?
    полимфорфизм от мира шаблонов.
    SFINAE это механизм(правило) языка С++, согласно которому в случаях, когда компилятор 
    не может рассчитать явный тип шаблонна, он идёт искать другой перегруженный шаблон.
    Приоритетность поиска задаётся от самого общего случая до самого специального.
    
5.Как можно использовать вспомогательный шаблон std::enable_if
    Когда мы хотим добавить условие в метафункцию. Например  осуществлять операцию над
    произвольным объектом, только если в классе этого объекта есть определённый метод.